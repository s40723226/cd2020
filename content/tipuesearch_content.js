var tipuesearch = {"pages": [{'title': 'About', 'text': 'cd2020-bg1分組網站: https://s40723246.github.io/cd2020-bg1/content/index.html \n group members 吳沛汶Repository: \xa0 40723201 \xa0 | Site: \xa0 40723201 王冠驊Repository: \xa0 40723206 \xa0 | Site: \xa0 40723206 \xa0(小組長) 杜玗宸Repository: \xa0 40723213 \xa0 | Site: \xa0 40723213 林子欽Repository: \xa0 40723216 \xa0 | Site: \xa0 40723216 洪維成Repository: \xa0 40723223 \xa0 | Site: \xa0 40723223 高立倫Repository: \xa0 40723226 \xa0 | Site: \xa0 40723226 陳羽泓Repository: \xa0 40723229 \xa0 | Site: \xa0 40723229 \xa0 (小組長) 陳冠樺Repository: \xa0 40723230 \xa0 | Site: \xa0 40723230 葉承叡Repository: \xa0 40723241 \xa0 | Site: \xa0 40723241 趙子得Repository: \xa0 40723242 \xa0 | Site: \xa0 40723242 \xa0(小組長) 鄭竣元Repository: \xa0 40723246 \xa0 | Site: \xa0 40723246 \xa0 (group leader) Repository: \xa0 40732319 \xa0 | Site: \xa0 40732319 \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'week', 'text': '\n', 'tags': '', 'url': 'week.html'}, {'title': 'week1~week5', 'text': 'week1 \n 1.下載 2019Fall可攜套件.7z \xa0 (編譯\xa0 Solvespace 用)，下載後開啟。 2.登入github的個人帳號，創建新的倉儲cd2020。 3.進入要存放的 資料夾 4.輸入 git clone \xa0 https://github.com/s40723246/cd2020 \xa0。 5.輸入git submodule add https://github.com/mdecourse/cmsimde.git 。 6.再將up_dir的裡的資料複 製到資料夾cd2020 。 7.以上動作完成後，使用python wsgi.py 開始編輯倉儲。 8.編輯結束後， \xa0 git add . \xa0 > \xa0 git commit -m "\xa0 " \xa0 > \xa0 git push。\xa0 \xa0 \n week2 \n New pull request3.8.2操作: 1.登入個人的github，fork 老師的倉儲 。 2.在個人帳號倉儲中找到fork的倉儲，並複製倉儲網址。 3.輸入指令\xa0git clone --recurse-submodules\xa0fork的網址 ，將倉儲clone下來。 4.完成後，進入9443編輯網站。 5.完成編輯，接著git add .commit.push。 6.使用個人帳號下fork 倉儲，建立New pull request。 7.提交後等待老師接受並且merge即完成。 \n 將可攜系統更新至 python3.8.2 版本 \n 1.在隨身系統下新增一個資料夾cd2020，並在cd2020下新建資料夾data，接著在data下新增資料夾py382及 wscite432、portablegit 。 2.進入 Python 官網。 3.點選Downloads下的 Windows ，並點選 Latest Python 3 Release - Python 3.8.2 。 4.滑至最底，找到 Windows x86-64 executable installer 並下載。 5.開始下載，必須將pip選項取消，接著按下next並將檔案下載至資料夾py382。 6.下載SciTE系統\xa0 full 64-bit download ，下載完後解壓縮至data下的wscite432。 7.建立新的start.bat及stop.bat。 \n start.bat: \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n 20 \n 21 \n 22 \n 23 \n 24 \n 25 \n 26 \n 27 \n 28 \n 29 \n 30 \n 31 \n 32 \n 33 \n 34 \n 35 \n 36 \n 37 \n \n \n \n @echo \xa0 off \n set \xa0 Disk = y \n subst \xa0 % Disk % : \xa0 "data" \n \xa0 \xa0 \n % Disk % : \n \xa0 \xa0 \n set \xa0 HomePath = % Disk % :\\home \n set \xa0 HomeDrive = % Disk % :\\home \n set \xa0 Home = % Disk % :\\home \n set \xa0 USERPROFILE = % Disk % :\\home \n \xa0 \xa0 \n REM 將系統 Python 程式的 io 設為 utf - 8 \n set \xa0 PYTHONIOENCODING = "utf-8" \n \xa0 \xa0 \n #REM for putty \n #Set GIT_HOME=%CDisk%:\\portablegit\\bin\\ \n #Set GIT_SSH=%Disk%:\\putty\\plink.exe \n \xa0 \xa0 \n set \xa0 PYTHONPATH = % Disk % :\\py382\\DLLs; % Disk % :\\py382\\Lib; % Disk % :\\py382\\Lib\\site - packages; \n set \xa0 PYTHONHOME = % Disk % :\\py382 \n \xa0 \xa0 \n set \xa0 path_python = % Disk % :\\py382; % Disk % :\\py382\\Scripts; \n set \xa0 path_msys2 = % Disk % :\\msys64\\mingw64\\ bin ; \n set \xa0 path_git = % Disk % :\\portablegit\\ bin ; \n set \xa0 path_tcc = % Disk % :\\tcc; \n \xa0 \xa0 \n path = % Disk % :; % path_python % ; % path_msys2 % ; % path_git % ; % path_tcc % ; \n \xa0 \xa0 \n start \xa0 / MIN \xa0 cmd.exe \n start \xa0 / MIN \xa0 cmd.exe \n start \xa0 / MIN \xa0 cmd.exe \n start \xa0 / MIN \xa0 cmd.exe \n \xa0 \xa0 \n start \xa0 / MIN \xa0 % Disk % :\\wscite432\\wscite\\SciTE.exe \n start \xa0 / MIN \xa0 % Disk % :\\wscite432\\wscite\\SciTE.exe \n \xa0 \xa0 \n Exit \n \n \n \n \n \n \n \n stop.bat: \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n \n \n \n @echo \xa0 off \n set \xa0 Disk = y \n path = % PATH % ; \n \xa0 \xa0 \n taskkill \xa0 / IM python.exe \xa0 / F \n taskkill \xa0 / IM pythonw.exe \xa0 / F \n taskkill \xa0 / IM scite.exe \xa0 / F \n \xa0 \xa0 \n REM 終止虛擬硬碟與目錄的對應 \n subst \xa0 % Disk % : \xa0 / D \n REM 關閉 cmd 指令視窗 \n taskkill \xa0 / IM cmd.exe \xa0 / F \n \xa0 \xa0 \n EXIT \n \n \n \n \n \n \n \n 8. 下載MSYS2\xa0 msys2-x86_64-20190524.exe \xa0至data下。 9. 下載PortableGit\xa0 64-bit Git for Windows Portable \xa0至\xa0 portablegit下。 10 .安裝pip，到 https://bootstrap.pypa.io/get-pip.py 頁面，另存新檔到data下。 11.執行指令 ，將python3.8.2版本缺少的模組下載下來。 \n \n \n \n \n \n \n 1 \n \n \n \n python get - pip.py \n \n \n \n \n \n \n \n \n \n \n \n \n \n 2 \n \n \n \n pip install flask bs4 lxml pelican markdown flask_cors leo \n \n \n \n \n \n \n', 'tags': '', 'url': 'week1~week5.html'}, {'title': 'week6~week10', 'text': 'WEEK6 \n ．安裝OBSPortable.exe與yotube,拍影片頭像會有自己的影像左下角 \n OBS下載網址: \n https://obsproject.com/download \n WEEK8 \n 安裝模組 1.pip install opencv-python 2.pip install imutils 3.pip install numpy \n WEEK9 \n 期中考 \n WEEK10 \n gm用戶登錄設置 \n', 'tags': '', 'url': 'week6~week10.html'}, {'title': 'week11~week15', 'text': 'WEEK11 \n ubuntu設置 \n 操作步驟: 1.下載 vitualbox 、 ubuntu 、 CoppeliaSim 四輪車控制器檔案。 2.開啟vitualbox，匯入ubuntu。 3.設定虛擬主機的網路埠號。 4.設定完成後啟動ubuntu。 5.輸入密碼kmol2020，開啟lxterminal， 輸入xterm&開啟 6.使用ctrl+右鍵將視窗放大 7.依照步驟打開coppeliasim，輸入ls查看內容。 8.cd coppeliasim4_rev4->ls->cd CoppeliaSim_Edu_v4_0_0_Ubuntu18_04->ls->./coppeliaSim.sh。 9.開啟後打開檔案sdc.ttt。 10.開啟啟動器，並開啟下載好的CoppeliaSim四輪車控制器檔案。 11.將檔案中的car_model.py放入編譯器中執行。 12.打開CoppeliaSim中的模擬，四輪車開始繞圈即成功。 \n WEEK12 \n \n \xa0 翻譯： MSModelingAndTFApproaches \n 4.8結論 \n 本章介紹基於傳遞函數概念的分析工具。主要是，我們開發瞭如何計算時間響應和確定係統性能。 我們還介紹了根軌跡和波特圖技術。 \n 5.基於傳遞函數的設計 \n 5.1引言 \n 解決控制設計問題始終是一個挑戰，即使對於更有經驗的人也是如此控制工程師。必須為其設計控制器的系統可以是現有的，但表現不佳，我們想改進，或者我們正在構建的新系統。在這兩種情況下，設計程序均在通過定義所需的性能來獲得系統的數學模型這將使我們能夠確定控制器的結構及其參數。通常，控制系統旨在保證某些性能考慮到系統的閉環動力學。這樣的表演可以歸納為瞬態和穩態的穩定性和行為國家政權。通過尊重給定係統的局限性，它始終是我們試圖通過尋求折衷來改善瞬態狀態的情況在系統可能出現的超調和其速度之間。為了穩定狀態，我們進行搜索以確保誤差小於某個選定的公差。我們將在本章中考慮以響應設計要求的控制器-是經典的，例如比例，積分和微分作用，他們的近似值。本章的其餘部分安排如下。在第2節中，控制設計問題已製定。第三部分介紹了設計經典的經驗方法控制器。在第4節中，使用根軌跡設計經典控制器方法被開發出來。第5節介紹了Bode方法。第6節介紹了一個案例研究包括為直流電動機套件設計不同的控制器。 \n \xa0 \n 5.2控制設計問題的表述 \n 在本章中，我們將考慮性能較差的現有系統，我們想改善。我們的願望是對瞬態同時採取行動通過在閉環中引入控制器來強制整個系統按預期運行。可以在時域或頻域中給出性能。同時領域，穩定性是設計過程中的首要要求。在旁邊 \n 穩定性，我們希望瞬態和穩態機制能夠在理想的方式。在瞬態狀態的時域中，我們應控製過衝，所選時間的上升時間和穩定時間將取決於我們希望為我們的系統保證精度。對於穩態制度，我們希望確保系統的錯誤小於特定的指定值。 \n 在頻域中，除了性能根據閉環動力學的穩定性，增益相位和通常來說，很難在兩者之間建立聯繫時域和頻域的性能。更具體地說，所研究的系統由傳遞函數描述，例如可以使用識別方法獲得。讓我們用G（s）表示這個傳遞函數。必須在控制的第一階段確定此模型設計。然後，根據控制工程師的性能和專業知識進行設計我們可以選擇可以正確響應設計的控制器結構目標。然後，使用適當的方法，我們可以確定控制器的增益。 \n 因此，控制設計問題包括確定： \n \n 控制器的結構 \n 及其參數 \n \n 使用所需的性能和一些啟發式方法來強制關閉-所選控制器的動態迴路表現出理想的表現。 這種方法由於被忽略的不同現象，在實踐中可能需要改進動力學。 \n 我們將在本章中考慮的控制器是經典的控制器， \n 在文獻中被認為是比例（P），積分（I）和微分（D）動作及其近似也稱為相位滯後超前和相位超前滯後。 控制器的傳遞函數將表示為C（z）。 確定控制器後，相應的差分方程為使用適當的微控制器實時獲取和實現。 對於有關此主題的更多詳細信息，我們請讀者參考實現部分詳細。 \n 由於系統性能通常是連續不斷地給出的，因為這樣做更自然。設計步驟可以在 \n 連續時間或離散時間。一般來說，設計方法使用以下步驟： \n \n 表演轉換成桿子 \n 選擇所需控制器的結構 \n 使用所需的極點確定控制器參數 \n 對控制器的參數進行了一些調整以補償 \n \n 預期行為與實際行為之間可能存在差異設計過程中未考慮的系統零。重要的是要注意，控制器參數的確定可以在連續時間或離散時間完成。在連續時間內在這種情況下，確定控制器參數，然後控制器進行將fer函數轉換為離散時域，得到差分方程我們應該實時實施。對於離散時間，差分方程為直接獲得併實施。 \n 設計方法可以是以下方法之一： \n \n 基於經驗方法的設計 \n 基於根軌跡法的設計 \n 基於波特圖法的設計 \n \n 在本章的其餘部分，我們將介紹這些方法並給出一些示例展示這些技術如何應用於實際系統。 仿真結果將是用來表明其有效性。 控制器的設計是連續進行的然後獲得相應的控制器離散時間版本。 的本章使用在Boukas中開發的方法。 \n 5.3基於經驗方法的設計 \n 實證方法基於齊格勒-尼科爾斯的工作。這些方法與其他方法相比，具有優勢，因為它們允許設計除即使在沒有系統數學模型的情況下，也可以找到所需的控制器。Ziegler-Nichols方法主要基於動力學系統的響應。Ziegler-Nichols提出了使用時間響應的方法，其他使用時間響應的方法。頻率響應。在本節的其餘部分，我們將介紹這些方法。首先讓我們集中討論時間響應方法。在這些方法中我們可以處理開環穩定和不穩定的系統。第一種方法考慮在原點無極點也不佔優勢的穩定係統的情況複雜的兩極。在這種情況下，階躍響應由圖5.1中的給出。從中直接確定參數T，τ和k以及Tab。其中k是系統的增益，τ是上升時間，T是延遲時間。 \n 5.4基於根軌蹟的設計 \n 根源技術是控制系統分析和設計的強大工具。tems。 在本節中，我們將使用它來設計控制器，以確保理想的表演。 該系統的模型應該以 \n 轉換功能。根軌跡技術可用於設計經典控制器。 的該方法背後的技術包括選擇使座位穿過表演中給定的極點。 \n 其中k，-zi和-pi分別是系統的增益，零和極點。首先讓我們集中討論比例控制器的設計。 \n 其中KP是要確定的控制器的增益。基本控製過程中可以知道，比例控制器的作用是同時考慮了瞬態和穩態機制，但其能力有限。它可以減少錯誤，但絕不會使其等於零。計算控制器的增益，我們將使用以下過程 \n 1.計算閉環動力學的特徵方程，即：1 + KpG（s）令K = kKp \n 2.畫出從0到無窮大的K的根軌跡 \n 3.確定基因座和對應於所需的阻尼比ξ（cosθ=ξ）並得到主導的極點對。 讓SD成為具有虛構積極部分的人。 \n 4.計算得出極點sd的增益K \n \n \n \n', 'tags': '', 'url': 'week11~week15.html'}, {'title': '開會紀錄', 'text': '', 'tags': '', 'url': '開會紀錄.html'}, {'title': '第1次開會紀錄', 'text': '會議流程： \n \n 成員簽到 \xa0 。 \n 討論日後分工 \xa0 。 \n 有問題的同學提出問題 \xa0 。 \n \n 成員名單 \xa0: \n \n 40723201 \xa0 (簽 ) 已建立完成網站 \xa0 \n 40723206 (簽) \xa0 已建立完成網站 \xa0( 小組長) \xa0 \n 40723213 (簽) \xa0 已建立完成網站 \xa0 \n 40723216 (簽) \xa0 已建立完成網站 \xa0 \n 40723223 (簽)\xa0 已建立完成網站 \xa0 \n 40723226 (簽) \xa0 已建立完成網站 \xa0 \n 40723229 (簽) \xa0 已建立完成網站 \xa0( 小組長) \xa0 \n 40723230 (簽) \xa0 已建立完成網站 \xa0 \n 40723241 (簽) \xa0 已建立完成網站\xa0 \xa0 \n 40723242 (簽) \xa0 已建立完成網站 \xa0( 小組長) \xa0 \n 40723246 (簽) \xa0 已建立完成網站 \xa0(group leader) \n 40732319 (簽) \xa0\xa0 \n \n 日後小組分工 ： \n \n 由（40723201、40723206、40723230、40723241、40723246）， 已經建立好網站及編輯完網站的同學，前去協助還沒完成的同學， 及分配工作。 \n 40723213 、 40723242督處尚未完成的同學，互相協助來完成第一周課程 \xa0 。 \n 40723223 、 40723226負責處理小組會議 \xa0 。 \n 40723246 \xa0 負責製作小組會議PDF 。 \n 40723241 、 40723216提醒小組問題及完成分組作業 \xa0 。 \n \n 組員會議中提醒的事項： \n \n \xa0 網站的格式及編譯 \xa0 。 \n \xa0 其餘的工作分配 \xa0 。 \n \xa0 PDF放倉儲的download及如何放置 。 \n \n 開會影片： https://www.youtube.com/watch?v=nKNgEypBalo#action=share \n', 'tags': '', 'url': '第1次開會紀錄.html'}, {'title': '第2次開會紀錄', 'text': '會議流程： \n \n 成員簽到等候 \xa0 \xa0。 \n 分工業進度回報及問題討論 。 \xa0 \n 有問題的同學提出問題 。 \xa0 \n \n \xa0 成員名單： \xa0 \n \n 40723201\xa0 （ 簽 ） \xa0 已建立完成網站 \xa0 \n 40723206（簽） \xa0 已建立完成網站 \xa0（ 小組長） \xa0 \xa0 \n 40723213（簽） \xa0 已建立完成網站 \xa0 \n 40723216（簽） \xa0 已建立完成網站 \xa0 \n 40723223（簽） \xa0 已建立完成網站 \xa0 \n 40723226（簽） \xa0 已建立完成網站 \xa0 \n 40723229（簽） \xa0 已建立完成網站 （ 小組長） \xa0 \xa0 \xa0 \n 40723230（） \xa0 已建立完成網站 \xa0 \n 40723241（簽） \xa0 已建立完成網站\xa0 \xa0 \n 40723242（簽） \xa0 已建立完成網站 （ 小組長） \xa0 \xa0 \xa0 \n 40723246 \xa0 （ 簽\xa0 \xa0 ） \xa0已建立完成網站\xa0 （小組組長） \n 40732319（） \xa0 \n \n \xa0 分工業進度回報及問題討論 \xa0 \xa0： \n \n \xa0 作業一\xa0 \xa0 （4 \xa0 輪 車） \xa0 \n \n 根據主題0和主題1的素材，您能否全面描述機械設計團隊，為了完成作業四輪機器人需要做些 什麼？ \xa0 \n \n \xa0 作業二\xa0 \xa0 （設計 協同） \xa0 \n \n 根據主題 \xa0 Topic 0 \xa0 們可以創建英語英語詞彙收集服務嗎？ \xa0 \n 根據主題 Topic 1 \xa0 我們可以構建在線工具來促進這些過程嗎？ \xa0 \xa0 \xa0 \n \xa0 主題0： 從數字到工業+工程產品設計協作（ 從數字到工業+工程產品設計協作 ） \xa0 \xa0 \n 設計 資料 ： DigitalProductCollaboration.pdf ， IndustrialAndEngineeringProductDesignCollaboration.pdf \xa0 \n 我們可以創建 \xa0 英語英語 \xa0 詞彙收集服務嗎？ \xa0 \n 相關 網站： https \xa0 : \xa0 //www.autoitscript.com/forum/files/file/419-dictionary_bigdb/ \xa0 \n 主題1 \xa0 ： 機械設計流程（ 機械設計過程 ） \xa0 \xa0 \n 登錄到您的gm電子郵件帳戶，然後下載 \xa0 MechanicalDesignProcess.pdf 。 \xa0 \n 以上由\xa0 \xa0 40723206\xa0 \xa0 分配工作 \xa0 \xa0。 \n 下列為分工表格： \n \n \n \xa0 各組員下載OBS，往後會議討論用 \xa0 \n 作業二必須在4/23前完成，並上傳pdf檔到個人倉儲的下載上。不會做的可以問會的同學或在gitter上發問。 \n 請依每個人的作業二pdf檔，網站內容，進行互評。 \n \n \n 本週討論教材： \n 主題0：從數字到工業+工程 \xa0 產品設計協作 \n 登錄到您的通用汽車電子郵件帳戶並下載 \n DigitalProductCollaboration.pdf \n 工業與工程產品設計協作.pdf \n 我們可以創建英語英語詞彙收集服務嗎？ \n https://www.autoitscript.com/forum/files/file/419-dictionary_bigdb/ \n 主題1：機械設計過程 \n 登錄到您的gm電子郵件帳戶，然後下載 MechanicalDesignProcess.pdf 。 \xa0 \n （我們可以構建在線工具來促進這些過程嗎？） \n 成功的設計 \n 建立設計 \n 結構上的考慮 \n 材料與工藝 \n 主題二：機電一體化系統設計 \n 登錄到您的gm電子郵件帳戶，然後下載 MSModelingAndTFApproaches.pdf 。 \xa0 \n （我們可以構建在線工具來促進這些過程嗎？） \n 機電一體化系統 \n 數學建模 \n 傳遞函數方法 \n 登錄到您的gm電子郵件帳戶並下載 MechatronicDesignCases.pdf 。 \xa0 \n 直流電動機速度和位置控制 \n 平衡機器人控制 \n 磁懸浮系統 \n 參加影片： https://www.youtube.com/watch?v=Q0R_g1xw3dQ#action=share \n', 'tags': '', 'url': '第2次開會紀錄.html'}, {'title': '第3次開會紀錄', 'text': '第一組 第三次會議\xa0 1.成員簽到等候 2.分工作業進度回報及問題討論 3.有問題的同學提出問題 成員名單 1.40723201 (簽) 已建立完成網站 2.40723206 (簽) 已建立完成網站 小組長 3.40723213 (簽) 已建立完成網站 4.40723216 (簽) 已建立完成網站 5. 40723223(簽) 已建立完成網站 6.40723226 () 已建立完成網站 7.40723229 (簽) 已建立完成網站 小組長 8.40723230 (簽) 已建立完成網站 9.40723241 (簽) 已建立完成網站 10.40723242 () 已建立完成網站 小組長 11.40723246 (group leader) (簽) 已建立完成網站 12.40732319 () ※作業一(4 輪車) *根據主題 0 和主題 1 的素材，您能否具體描述機械設計團隊，為了完成作業四輪機 器人需要做些什麼? 四輪車馬達設定及鍵盤控制加速及轉彎 本週重要提醒及任務 1.各組員下載 OBS，以往後會議討論用 2. 作業二必須在 4/23 前完成，並上傳 pdf 檔到個人倉儲的 download 上。 不會做 的可以問會的同學或在 gitter 上發問 3. 請依每個人的作業二 pdf 檔、網 站內容，進行互評 4.把網站不是自己資料的標題刪除 \n https://www.youtube.com/watch?time_continue=60&v=T3PWWPAqDgY&feature=emb_logo \n', 'tags': '', 'url': '第3次開會紀錄.html'}, {'title': '第4次開會紀錄', 'text': '作業三： 根據對 Topic2 和 Topic3 的閱讀，使用 CoppeliaSim 、 Webots 、 Onshap e 提出一個機電一體化項目。 \n topic2: \n coppeliasim :40723246 \n MSModelingAndTFApproaches.pdf . 207頁:5人 40723216 40723213 40723223 40723241 40723230 \n MechatronicDesignCases.pdf . 46頁:2人 40723229 40723206 \n topic3: \n MechaFutureAndChallenges.pdf . 38頁:1人 40623246 \n MechaEducFutureNeed.pdf . 20頁:1人 40723242 \n 開會影片： https://www.youtube.com/watch?v=Ti7BFHDErb8&feature=emb_title \n', 'tags': '', 'url': '第4次開會紀錄.html'}, {'title': 'Assignments', 'text': '', 'tags': '', 'url': 'Assignments.html'}, {'title': 'Assignment 1', 'text': '', 'tags': '', 'url': 'Assignment 1.html'}, {'title': 'random grouping', 'text': '（1） \xa0request 模組：此模組是為了可以使用Python來下載網頁上的資料，根據 請求 模組建立 適當 的HTTP請求，通過HTTP請求從網頁伺服器下載 指定的資料，分為兩種模式發布，獲取。 參考文獻： https：/ /ithelp.ithome.com.tw/articles/10206215 \n (2)\xa0 ast 模組: 此模組是python原始碼到位元組碼的一種中間產物，藉助 ast 模組可以從語法樹的角度分析原始碼結構，其中的語法 ast.literal_eval 是為了能夠安全地評估表達式節點或包含Python文字或容器顯示的字符 串。提供的字符串或節點只能由以下Python文字結構組成：字符串、字 節、數字、元組、列表、字典、集合、布林值、None。 參考文獻: \xa0 https://docs.python.org/3/library/ast.html https://www.itread01.com/content/1544847254.html \n (3) \xa0 random 模組:此模組用於生成偽隨機數，且有許多種用法，例如:隨機選取 choice 、隨機選取 \xa0sample \xa0 (一次選多筆資料)、隨機調換順序 \xa0shuffle \xa0 (就 地調換順序)、隨機取得亂數 \xa0 random \xa0 (0~1之間的隨機亂數)、隨機取得亂 數 \xa0 uniform \xa0 (可以指定範圍)。 參考文獻: \xa0 https://ithelp.ithome.com.tw/articles/10207483 (4) \xa0 for 迴圈: 在處理資料的時候，時常會需要重複執行某些相同的步驟；而迴 圈 (loop) 的作用是讓指定的某段敘述在條件符合的情況下一直重覆執行， 是程式設計中很重要的一種控制結構，且分為兩類: for 、 while \n 參考文獻: \xa0 https://medium.com/ccclub/ccclub-python-for-beginners-tutorial4990a5757aa6 \n', 'tags': '', 'url': 'random grouping.html'}, {'title': 'portable system', 'text': '\n 1.先去GOOGLE SEARCH\xa0 PYTHON \xa0 \n 2.下載 Windows x86-64 executable installer \xa0 \n 3.載完點並 不要勾選pip選項，接著按下next選取放置資料夾 \n 4.在隨身系統下新增放置資料夾cd2020，並在cd2020下新建資料夾data，data<py382< wscite432<portablegit \n 5.下載SciTE系統 \xa0 full 64-bit download ，下載完後解壓縮至data下的wscite432 \n 6.在cd2020下建立新的start.bat及stop.bat \n 7.至 SciTE系統更改 start.bat及stop.bat \n 8. 載入MSYS2\xa0 msys2-x86_64-20190524.exe \xa0至data \n 9. 載入PortableGit\xa0 64-bit Git for Windows Portable \xa0至 portablegit \n 10 .裝入 pip ，另存新檔到data 11.測試 將python3.8.2版本，將少的模組下載回來 \n', 'tags': '', 'url': 'portable system.html'}, {'title': 'Four Wheel Car', 'text': 'Simulation & Simulation settings dialog : \xa0 在任何機器製作完成後，都需要進行模擬測試，以確保機器能正常運作，或者測試機器的耐用性及安全性。在這兩章節主要說明了如何建立模擬，也教了如何調整模擬的速度，這能使我們模擬起來更有效率，接著就是模擬對話框的基本操作，其中也講解了在模擬過程可能會發生的狀況及解決方法，像是模擬速度調高或調慢，會造成不穩定或不準確的模擬，反之；還有因顯示卡的效能不足而造成模擬之屏幕刷新率太慢……等。 BubbleRob tutorial : \xa0 此教程主要在教如何設置bubbleRob機器人，在上學期我們有實際操作過，其中的內容包含如何建立模型、設置感測器、調整視覺感測器，建立模型包含機器人本體、車輪、支撐滑塊、障礙物，不只是設置模型外型及尺寸，還要設置模型的物理屬性；設置感測器則是為了偵測障礙物，讓機器人能順利避開障礙物；視覺感測器則是為了能夠讓我們在機器人模擬時觀察機器人前方狀況。 Line following BubbleRob tutorial : \xa0在此教程中，旨在擴展 BubbleRob 的功能，以使 BubbleRob 遵循地面上的規則，也就是調整視覺感測器並設置路徑及給定程式碼，使機器人能隨著路徑運作。 External controller tutorial : \xa0 此教程說明好幾種方式能從外部控制機器人及模擬機器人，最方便的就是編寫程式碼直接附加到場景；另外還有利用編寫插件的方法，但此方法編寫程序更加複雜；第三種就是使用遠端API，此方法非常便捷也可以使用與運行真實機器人完全相同的程式碼來控制或模擬模型（例如虛擬機器人） : 第四種方法是通過ROS節點， ROS 與遠程 API 相似，是使多個分佈式進程相互連接的便捷方法；第五種是透過BlueZero（ BØ ）節點，與 ROS 類似， BlueZero 是使多個分佈式進程相互連接的一種便捷方法，並且是一種輕量級的跨平台解決方案。 \n', 'tags': '', 'url': 'Four Wheel Car.html'}, {'title': 'Assignment 2', 'text': '', 'tags': '', 'url': 'Assignment 2.html'}, {'title': 'IndustrialAndEngineeringProductDesignCollaboration', 'text': "本研究旨在闡明工業設計師和工程設計師如何協作 \xa0 \n 這種聯盟如何反映設計過程。 我們與來自六個消費產品製造商的34名工業和工程設計師進行了有關實際產品設計項目的深入採訪。 \xa0 \n 首先 從訪問數據中識別出各個設計過程。 其次 ，我們然後使用鑲嵌方法將設計過程進行比較並合併為協作過程。 最後 ，我們簡化了協作流程，以創建具有代表性的流程模型。 \xa0 \n 結果 ，我們發現了 四種類型 的典型協同產品設計流程及其特徵： \xa0 \xa0 \n E類型1 \xa0 ：由ID主導的概念驅動過程， 類型2 \xa0 ：由ID主導的內外聯合過程， 類型3 \xa0 ：由ED主導的內在先流程， 類型4 \xa0 ： ID＆ED協同流程 。 \xa0 \n \xa0 工業和工程設計師之間 \xa0 \n 它經常被認為工程設計人員使用一個'向外接近 \xa0 電子商務 \xa0 發展從功能外觀“，而工業設計師遵循'向內方法 \xa0 E \xa0 \xa0 從外觀上的功能。 \xa0 \n 基於這些概念，提出了以下 兩種設計策略 ：一種是“ \xa0 由內而外 ”的策略，定義為首先設計內部工作部件，從而限制了外部形狀，另一種是“ \xa0 由外而內 ”的策略。 \xa0 \n 這些設計策略涉及公司應在特定條件下為特定目的採取的組合設計過程。 但是，從經驗證據中很少了解到這兩種策略如何在工業項目中應用。 很少有嘗試從工程設計和工業設計的綜合角度來看待設計過程。 \xa0 \n \xa0 本文有兩個目標 \xa0 \n 闡明在實踐中應用的原始協作產品設計過程的形式；其次，確定在不同條件下用於不同目的的不同類型的過程。 為此，我們對六家消費產品製造商的工業設計師和工程設計師進行了深入採訪。 我們使用“確定了每個公司的產品設計過程鑲嵌法”，其中結合了從訪談數據中提取的各個設計過程以完成一個協作過程。 結果，我們確定了 四種 典型的協作產品設計流程及其特徵。\xa0 \xa0 \n 本文包括三個部分：第一部分詳細介紹了研究方法。 第二部分介紹了典型的協作產品設計過程及其特徵。 最後，它總結了結果，並討論了對設計文獻的影響和貢獻。 \xa0 \n \xa0 Berends，Reymen，Stultiens和Peutz（2011） \xa0 對五家公司的設計過程進行了調查。 \xa0 Kleinsmann和Valkenburg（2003） \xa0 收集了有關工業中協同設計過程的故事，並確定了協同設計項目的關鍵主題和情節。 \xa0 \xa0 \n 追溯性賬目的不可靠或不准確 （ Ackroyd＆Hughes，1981年 ） \xa0 \n 我們採用了三個標準來選擇研究目標：（1）多家公司類似的產品領域； （2）工程和工業設計部門的多個參與者； （3）在整個產品開發週期中已經完成的項目。 \xa0 \n 大多數產品開發活動需要一組輸入 \xa0 \n 基於階段的模型由旨在執行任務的動作和旨在評估執行任務的結果的決策組成；其中完成構成進展到下一個階段 \xa0 \n 初步輸出 ，狀態報告等進行生產（ Browning等人，2006年 ）。 這一觀點得到了有關設計過程和組織的大量文獻的支持（例如， \xa0 Burns＆Stalker，1961； Clark，1991； Hubka＆Eder，2012 \xa0 ）。 \xa0 Ulrich和Eppinger（2012） \xa0 將其描述為最終結果所必需的信息，該信息被注入以將當前設計問題轉換為下一個問題以降低不確定性，從而產生輸出，直到形成最終結果為止。 這被建模為將功能規範（輸入）轉換為偽影規範（輸出）的過程。 指出，從信息處理的角度進行過程建模無法捕獲完整的信息流，因為人們對交互的了解。 他們認為，確定組織單位之間的相互作用的重要性，因為它們會引起建立可交付的流程模式的活動之間的依賴。 決定性，過程建模的在此透視基本元件被概括為）'的信息流與IPO（輸入端 E \xa0 方法 e \xa0 輸出）REP-resentation和'相互作用組織單位的'（人，團隊，公司等“。\xa0 \xa0 \n 從狀態轉換的角度來看， \xa0 Reymen（2001） \xa0 將設計過程描述為通過在每個階段執行任務並評估設計活動將狀態從一種狀態轉移到另一種狀態的過程。 這是台門車型，在設計活動發生在舞台的每一個階段，設計輸出的設計審查，從而作出決定之間是否進入下一個階段，重複當前階段或拒絕該項目的進行評估一致，大多數基於階段的模型都提出了這種觀點（ Wynn＆Clarkson，2005 \xa0 ）。 基於階段的模型由旨在執行任務的動作和旨在評估執行任務的結果的決策組成；其中完成構成進展到下一個階段 \xa0 （j̈ansch＆Birkhofer， 2006; \xa0 Roozenburg \xa0 ＆交叉 ，1991）。 除此之外，當從一個階段跳到另一個階段或在子過程之間鏈接時，伴隨輸入和輸出的信息流就會發生 \xa0 \n \xa0 “任務” 來表示項目的初始起點，不同於在每個階段執行的“任務”。 但是，這兩個術語的用法類似，用以表示執行設計工作，因此，人們對相互連接和處理任務的設計過程達成了普遍共識（ Dorst，2008年 ）。\xa0 \xa0 \xa0 \n 從狀態轉換的角度來看，有兩個活動：執行任務和評估結果。 通常，評估會在相對較短的時間內進行，以決定“前進，重複或下降”。 因此，我們將這些類型的活動（評估，設計審查，檢查，決策）稱為“事件”。 目前，我們有兩個編碼類別： “任務”和“事件”。 總之，我們可以用四個編碼類別對設計過程進行建模。 “任務”，“事件”，“信息流”和“交互” ，並且可以用階段的連接來表示。 此時，的設計過程的一個階段可以用來表示'輸入端 E \xa0 任務（設計活性 ）E \xa0 事件（deci-錫永製作） 在線 輸出“。以下描述瞭如何使用以上四種編碼類別對過程元素進行編碼。\xa0 \xa0 \xa0 \n \xa0 任務 ：清除設計人員執行的任務，例如“想法草圖”，“ 3D建模”等。 “是的，我做的草圖用圓珠筆來表達我的想法。對其進行少量著色或對其進行掃描以在Photoshop上進行修飾。'我們將其編碼為帶有“想法草圖”標籤的任務類別。事件：完成特定任務後，將進行一個事件（決策），從而導致下一個動作。一位受訪者說； '我們去樣機公司製造原型，並帶走所有兩個或三個原型。與他們舉行了一次模擬評估會議。工程師們聽老闆的批評。老闆說就是這樣，那就是，如果工程師有不同的想法，他們會提供意見。最後一個被選中。我們在事件類別中使用標籤“模擬評估會議”對此進行了編碼。\xa0 \xa0 \n 信息流 ：當任務或事件發生時會生成信息流。 它總是伴隨著輸入和輸出。 一位受訪者說；實際上，我們根據工程設計人員提供的規範進行工作。 直到有事情出現，我們才開始工作。 這說明工業設計師從工程設計師那裡接收到了“規格數據”作為輸入，他們開始使用他們的工作。 我們將此“規範數據從ED編碼為ID”。 另一個摘錄是：選擇一個後，我們會將模型的3D數據傳遞到工程部門。 我們發送“ STEP”文件，然後使用“ UG”開始設計。 這說明他們將3D CAD數據作為設計活動的輸出發送給了工程設計人員，這些輸入成為了後續工程設計活動的輸入。 我們對“從ID到ED的3D CAD數據”進行了編碼。 交互 ：發生任務或事件時，兩組經常交互。 例如，當工業設計師檢查是否可以修改內部空間時，工程設計師通過提供相關信息為他們提供建議。 在這種情況下，會發生激烈的互動，工程設計師將充當“顧問”。 情況就是這樣； “他們解釋說”這應該放在這裡和應擺在那裡“。然後，我們修改尺寸和位置，然後再次詢問它們是否可以減小2毫米的間隙。如果他們說“是”，我們會將一個部分壓平。我們將其編碼為“ ED到ID的顧問角色”。 \xa0 \xa0 \n 我們從每個轉錄的訪談數據中識別出流程要素。 我們盡可能用參與者自己的單詞標記它們。 我們將現場說明用作補充數據源。 在此過程中，我們按時間順序排列並連接了編碼元素，以構建部分設計過程。 該方法被廣泛採用以可視化工業過程模型。 \xa0 \n \xa0 輸出研究結果 \xa0 \n \n \xa0 流程塊中的流程從初始輸入開始，並在內部的各個小階段中運行。 迭代或反饋可能在塊內的各個小階段之間發生。 最後，他們對最終結果做出最終決定。 這是一個里程碑，指示該階段將跳到下一階段。 例如，在圖3的藍色方框中，此塊的主要工作是開發執行六個小階段的設計概念。 當他們處於渲染階段時，如果在渲染評估事件中不滿意渲染結果，則可以返回到構思草圖階段。 \xa0 \n \xa0 \n 在最後階段，設計模型作為結果由高層管理人員確認，然後跳至“產品計劃會議”。 在前一個結果進入下一個塊的輸入之後，兩個過程塊之間的過程流幾乎沒有機會被逆轉。 跨團隊通常進行最終設計，並由高層經理在每個工作組中批准。 回到上一個區塊意味著它無法滿足市場時間表。 因此，應該由最高管理層對此事做出決定。 \xa0 \n \xa0 \n 成果輸入 \xa0 \n \xa0 \n 工業設計師的設計活動稱為“ Concept Design-I”，而工程設計師的設計活動稱為“ Concept Design-E”。 \xa0 \n 圖5是圖3的簡化版本。 圖3中的彩色框使用了圖5中的相同彩色框進行了簡化。 圖3中的藍色框變為“ Concept Design-I”。 圖3中的“產品計劃會議”定義為“產品計劃”，並以細長的六邊形可視化。 由於它是一個單獨且獨特的設計活動，因此被確定為單個階段。 在紅色塊內部，有兩個並行的處理塊；右側的“ Concept Design-E”（紅色的小方框）是“主流程塊”，左側的“形狀修改”（黃色）是“對應的塊” 。 這兩個塊不視為單獨的階段，因為它們與紅色大塊內的起點到終點相連。 這樣，兩個設計師團隊之間的互動就很強。 為了區分兩個平行的塊，我們用粗實線表示主塊，並用淺實線表示相應的塊。 在綠色塊中，由於所有12個流程之間的設計活動都沒有什麼區別，因此我們將詳細設計，測試和生產的兩個順序流程塊合併為一個。 因此，在本研究中我們將它們視為一個階段。 當綠色方框中的設計過程繼續進行時，工業設計師會根據工程設計師的要求或他們自己的設計檢查目的不時做出反應。 他們通常將這些活動稱為“跟進”，與主要任務有所不同。 這些活動顯然存在，但不屬於流程塊。 它們是如圖3所示的離散過程元素，因此用虛線表示。 為了幫助視覺理解，實心箭頭，雙向寬箭頭和單個方向寬箭頭分別表示過程流，相互交互和單向交互。 \xa0 \n", 'tags': '', 'url': 'IndustrialAndEngineeringProductDesignCollaboration.html'}, {'title': 'MechanicalDesignProcess thirth segment', 'text': '\n', 'tags': '', 'url': 'MechanicalDesignProcess thirth segment.html'}, {'title': 'Mechanical Design Process first segment', 'text': '\n', 'tags': '', 'url': 'Mechanical Design Process first segment.html'}, {'title': 'Assignment 3', 'text': '\n', 'tags': '', 'url': 'Assignment 3.html'}]};